// Copyright 2014 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

// Internal, used by fileSystemProvider's custom bindings. These functions are
// called when events' callbacks are invoked.
[platforms=("chromeos"),
 implemented_in="chrome/browser/chromeos/extensions/file_system_provider/file_system_provider_api.h", nodoc]
namespace fileSystemProviderInternal {
  interface Functions {
    // Internal. Success callback of the <code>onUnmountRequested</code>
    // event. Must be called when unmounting is completed.
    static void unmountRequestedSuccess(DOMString fileSystemId,
                                        long requestId);

    // Internal. Error callback of the <code>onUnmountRequested</code>
    // event. Must be called if unmounting fails.
    static void unmountRequestedError(
        DOMString fileSystemId,
        long requestId,
        fileSystemProvider.ProviderError error);

    // Internal. Success callback of the <code>onGetMetadataRequested</code>
    // event. Must be called if metadata is available.
    static void getMetadataRequestedSuccess(
        DOMString fileSystemId,
        long requestId,
        fileSystemProvider.EntryMetadata metadata);

    // Internal. Error callback of the <code>onGetMetadataRequested</code>
    // event. Must be called when obtaining metadata fails.
    static void getMetadataRequestedError(
        DOMString fileSystemId,
        long requestId,
        fileSystemProvider.ProviderError error);

    // Internal. Success callback of the <code>onReadDirectoryRequested</code>
    // event. Can be called multiple times per request.
    static void readDirectoryRequestedSuccess(
        DOMString fileSystemId,
        long requestId,
        fileSystemProvider.EntryMetadata[] entries,
        boolean hasMore);

    // Internal. Error callback of the <code>onReadDirectoryRequested</code>
    // event. Must be called when reading a directory fails.
    static void readDirectoryRequestedError(
        DOMString fileSystemId,
        long requestId,
        fileSystemProvider.ProviderError error);

    // Internal. Success callback of the <code>onOpenFileRequested</code> event.
    // Must be called, when opening succeeds.
    static void openFileRequestedSuccess(
        DOMString fileSystemId,
        long requestId);

    // Internal. Error callback of the <code>onOpenFileRequested</code> event.
    // Must be called when opening fails.
    static void openFileRequestedError(
        DOMString fileSystemId,
        long requestId,
        fileSystemProvider.ProviderError error);

    // Internal. Success callback of the <code>onCloseFileRequested</code>
    // event. Must be called, when closing succeeds.
    static void closeFileRequestedSuccess(
        DOMString fileSystemId,
        long requestId);

    // Internal. Error callback of the <code>onCloseFileRequested</code> event.
    // Must be called when closing fails.
    static void closeFileRequestedError(
        DOMString fileSystemId,
        long requestId,
        fileSystemProvider.ProviderError error);

    // Internal. Success callback of the <code>onReadFileRequested</code>
    // event. Can be called multiple times per request.
    static void readFileRequestedSuccess(
        DOMString fileSystemId,
        long requestId,
        ArrayBuffer data,
        boolean hasMore);

    // Internal. Error callback of the <code>onReadFileRequested</code>
    // event. Must be called when reading a file fails.
    static void readFileRequestedError(
        DOMString fileSystemId,
        long requestId,
        fileSystemProvider.ProviderError error);
  };
};

